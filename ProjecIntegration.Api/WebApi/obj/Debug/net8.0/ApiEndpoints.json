[
  {
    "ContainingType": "WebApi.Controllers.FileController",
    "Method": "UploadFile",
    "RelativePath": "api/File",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "files",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.ImageDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.FileController",
    "Method": "UploadFile",
    "RelativePath": "api/File/{Id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "files",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.ImageDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.GeneriqueController\u00604[[Domain.Entity.PublicationEntity.Mod\u00E9ration.Signalement, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.Signalement.GetSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.AddSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.Signalement.UpdateSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "GetAll",
    "RelativePath": "api/Signalement",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[System.Collections.Generic.List\u00601[[ApplicationUser.Dto.Signalement.GetSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.GeneriqueController\u00604[[Domain.Entity.PublicationEntity.Mod\u00E9ration.Signalement, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.Signalement.GetSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.AddSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.Signalement.UpdateSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "AddAsync",
    "RelativePath": "api/Signalement",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "AddDto",
        "Type": "ApplicationUser.Dto.AddSignalementDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[System.Collections.Generic.List\u00601[[ApplicationUser.Dto.Signalement.GetSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.GeneriqueController\u00604[[Domain.Entity.PublicationEntity.Mod\u00E9ration.Signalement, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.Signalement.GetSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.AddSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.Signalement.UpdateSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "GetById",
    "RelativePath": "api/Signalement/{Id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationUser.Dto.Signalement.GetSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.GeneriqueController\u00604[[Domain.Entity.PublicationEntity.Mod\u00E9ration.Signalement, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.Signalement.GetSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.AddSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.Signalement.UpdateSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "AddAsync",
    "RelativePath": "api/Signalement/{Id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[System.Collections.Generic.List\u00601[[ApplicationUser.Dto.Signalement.GetSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.GeneriqueController\u00604[[Domain.Entity.PublicationEntity.Mod\u00E9ration.Signalement, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.Signalement.GetSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.AddSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.Signalement.UpdateSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "AddAsync",
    "RelativePath": "api/Signalement/{updtId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updtId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "AddDto",
        "Type": "ApplicationUser.Dto.Signalement.UpdateSignalementDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[System.Collections.Generic.List\u00601[[ApplicationUser.Dto.Signalement.GetSignalementDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.GeneriqueController\u00604[[Domain.Entity.PublicationEntity.Mod\u00E9ration.SignalementType, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.SignalementType.GetSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.SignalementType.AddSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.SignalementType.UpdateSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "GetAll",
    "RelativePath": "api/SignalementType",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[System.Collections.Generic.List\u00601[[ApplicationUser.Dto.SignalementType.GetSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.GeneriqueController\u00604[[Domain.Entity.PublicationEntity.Mod\u00E9ration.SignalementType, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.SignalementType.GetSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.SignalementType.AddSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.SignalementType.UpdateSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "AddAsync",
    "RelativePath": "api/SignalementType",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "AddDto",
        "Type": "ApplicationUser.Dto.SignalementType.AddSignalementTypeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[System.Collections.Generic.List\u00601[[ApplicationUser.Dto.SignalementType.GetSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.GeneriqueController\u00604[[Domain.Entity.PublicationEntity.Mod\u00E9ration.SignalementType, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.SignalementType.GetSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.SignalementType.AddSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.SignalementType.UpdateSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "GetById",
    "RelativePath": "api/SignalementType/{Id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationUser.Dto.SignalementType.GetSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.GeneriqueController\u00604[[Domain.Entity.PublicationEntity.Mod\u00E9ration.SignalementType, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.SignalementType.GetSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.SignalementType.AddSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.SignalementType.UpdateSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "AddAsync",
    "RelativePath": "api/SignalementType/{Id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[System.Collections.Generic.List\u00601[[ApplicationUser.Dto.SignalementType.GetSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.GeneriqueController\u00604[[Domain.Entity.PublicationEntity.Mod\u00E9ration.SignalementType, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.SignalementType.GetSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.SignalementType.AddSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.SignalementType.UpdateSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "AddAsync",
    "RelativePath": "api/SignalementType/{updtId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updtId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "AddDto",
        "Type": "ApplicationUser.Dto.SignalementType.UpdateSignalementTypeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[System.Collections.Generic.List\u00601[[ApplicationUser.Dto.SignalementType.GetSignalementTypeDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.AnnonceController",
    "Method": "CreateAnnonce",
    "RelativePath": "api/v1/Annonce",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "annonce",
        "Type": "ApplicationAnnonce.DTO.AddAnnonceDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationAnnonce.DTO.AddAnnonceDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.AnnonceController",
    "Method": "GetById",
    "RelativePath": "api/v1/Annonce/{annonceId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "annonceId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationAnnonce.DTO.GetAnnonceDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.AnnonceController",
    "Method": "UpdateAnnonce",
    "RelativePath": "api/v1/Annonce/{annonceId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "annonceId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "annonce",
        "Type": "ApplicationAnnonce.DTO.UpdateAnnonceDto",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.AnnonceController",
    "Method": "UpdateAnnonce",
    "RelativePath": "api/v1/Annonce/{annonceId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "annonceId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.AnnonceController",
    "Method": "GetAll",
    "RelativePath": "api/v1/Annonce/page/{pageNumber}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationAnnonce.DTO.GetAnnonceDto, ApplicationAnnonce, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.UserDetail.BannerController",
    "Method": "GetBanner",
    "RelativePath": "api/v1/Banner",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationUser.Dto.BannerDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.UserDetail.BannerController",
    "Method": "UpdateProfileBanner",
    "RelativePath": "api/v1/Banner",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "files",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationUser.Dto.BannerDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.UserDetail.BannerController",
    "Method": "GetBanner",
    "RelativePath": "api/v1/Banner/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationUser.Dto.BannerDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.UserDetail.BannerController",
    "Method": "AddBanner",
    "RelativePath": "api/v1/Banner/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "files",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationUser.Dto.BannerDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.UserDetail.BannerController",
    "Method": "UpdateBanner",
    "RelativePath": "api/v1/Banner/update",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "files",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationUser.Dto.BannerDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.CatalogueController",
    "Method": "GetAll",
    "RelativePath": "api/v1/Catalogue",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationTheather.DTO.CatalogueDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.CatalogueController",
    "Method": "GetCataloguesById",
    "RelativePath": "api/v1/Catalogue/{catalogueId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "catalogueId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.CatalogueDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.CatalogueController",
    "Method": "UpdateCatalogues",
    "RelativePath": "api/v1/Catalogue/{catalogueId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "catalogueId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updtCatalogue",
        "Type": "ApplicationTheather.DTO.UpdateCatalogueDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.CatalogueDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.CatalogueController",
    "Method": "DeleteCatalogue",
    "RelativePath": "api/v1/Catalogue/{catalogueId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "catalogueId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.CatalogueDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.CatalogueController",
    "Method": "GetCatalogues",
    "RelativePath": "api/v1/Catalogue/complexe/{complexeId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "complexeId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationTheather.DTO.CatalogueDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.CommandController",
    "Method": "GetAll",
    "RelativePath": "api/v1/Command",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationTheather.DTO.CommandDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.CommandController",
    "Method": "Create",
    "RelativePath": "api/v1/Command",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "CmdDtot",
        "Type": "ApplicationTheather.DTO.AddCommandDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.CommandController",
    "Method": "GetById",
    "RelativePath": "api/v1/Command/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.CommandDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.CommandController",
    "Method": "Delete",
    "RelativePath": "api/v1/Command/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.CommandController",
    "Method": "UpdateCommand",
    "RelativePath": "api/v1/Command/{updtId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updtId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updtdto",
        "Type": "ApplicationTheather.DTO.UpdateCommandDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.CommandController",
    "Method": "DoIHaveACommand",
    "RelativePath": "api/v1/Command/exist/{pieceid}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pieceid",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.CommandController",
    "Method": "GetByUser",
    "RelativePath": "api/v1/Command/get-command-user/{page}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.DataType.Pagination\u00601[[ApplicationTheather.DTO.CommandDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.CommandController",
    "Method": "GetByPiece",
    "RelativePath": "api/v1/Command/get-piece/{idPiece}/{page}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "idPiece",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.DataType.Pagination\u00601[[ApplicationTheather.DTO.CommandDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.ComplexeController",
    "Method": "GetAll",
    "RelativePath": "api/v1/Complexe",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationTheather.DTO.ComplexeDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.ComplexeController",
    "Method": "Create",
    "RelativePath": "api/v1/Complexe",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "complexe",
        "Type": "ApplicationTheather.DTO.AddComplexeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.AddComplexeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.ComplexeController",
    "Method": "Delete",
    "RelativePath": "api/v1/Complexe",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.ComplexeController",
    "Method": "GetById",
    "RelativePath": "api/v1/Complexe/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.ComplexeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.ComplexeController",
    "Method": "Update",
    "RelativePath": "api/v1/Complexe/{updtId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updtId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "complexe",
        "Type": "ApplicationTheather.DTO.UpdateComplexeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.FavorisController",
    "Method": "GetFavorisById",
    "RelativePath": "api/v1/Favoris/{page}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.DataType.Pagination\u00601[[ApplicationTheather.DTO.PieceDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.FavorisController",
    "Method": "AddPiecetoFavoris",
    "RelativePath": "api/v1/Favoris/addfavoris/{pieceId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pieceId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationTheather.DTO.FavorisDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.FavorisController",
    "Method": "DeletePiecetoFavoris",
    "RelativePath": "api/v1/Favoris/deletefavoris/{pieceId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pieceId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationTheather.DTO.FavorisDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.GeneriqueController\u00604[[Domain.Entity.UserEntity.FeedBack.Feedback, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.FeedBack.FeedBackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.FeedBack.AddFeedBackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.FeedBack.UpdateFeedbackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "GetAll",
    "RelativePath": "api/v1/FeedBack",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[System.Collections.Generic.List\u00601[[ApplicationUser.Dto.FeedBack.FeedBackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.GeneriqueController\u00604[[Domain.Entity.UserEntity.FeedBack.Feedback, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.FeedBack.FeedBackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.FeedBack.AddFeedBackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.FeedBack.UpdateFeedbackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "AddAsync",
    "RelativePath": "api/v1/FeedBack",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "AddDto",
        "Type": "ApplicationUser.Dto.FeedBack.AddFeedBackDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[System.Collections.Generic.List\u00601[[ApplicationUser.Dto.FeedBack.FeedBackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.GeneriqueController\u00604[[Domain.Entity.UserEntity.FeedBack.Feedback, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.FeedBack.FeedBackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.FeedBack.AddFeedBackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.FeedBack.UpdateFeedbackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "GetById",
    "RelativePath": "api/v1/FeedBack/{Id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationUser.Dto.FeedBack.FeedBackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.GeneriqueController\u00604[[Domain.Entity.UserEntity.FeedBack.Feedback, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.FeedBack.FeedBackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.FeedBack.AddFeedBackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.FeedBack.UpdateFeedbackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "AddAsync",
    "RelativePath": "api/v1/FeedBack/{Id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[System.Collections.Generic.List\u00601[[ApplicationUser.Dto.FeedBack.FeedBackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.GeneriqueController\u00604[[Domain.Entity.UserEntity.FeedBack.Feedback, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.FeedBack.FeedBackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.FeedBack.AddFeedBackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[ApplicationUser.Dto.FeedBack.UpdateFeedbackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
    "Method": "AddAsync",
    "RelativePath": "api/v1/FeedBack/{updtId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updtId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "AddDto",
        "Type": "ApplicationUser.Dto.FeedBack.UpdateFeedbackDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[System.Collections.Generic.List\u00601[[ApplicationUser.Dto.FeedBack.FeedBackDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Follow.FollowController",
    "Method": "AddFollow",
    "RelativePath": "api/v1/Follow",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "followerId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationUser.Dto.GetFollowerDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Follow.FollowController",
    "Method": "DeleteFollow",
    "RelativePath": "api/v1/Follow",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "followerId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationUser.Dto.GetFollowerDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Follow.FollowController",
    "Method": "DoIFollow",
    "RelativePath": "api/v1/Follow/do-i-follow",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "followerId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Follow.FollowController",
    "Method": "GetFollowed",
    "RelativePath": "api/v1/Follow/followed/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationUser.Dto.GetFollowerDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Follow.FollowController",
    "Method": "GetFollower",
    "RelativePath": "api/v1/Follow/follower/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationUser.Dto.GetFollowerDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.NotificationController",
    "Method": "GetAll",
    "RelativePath": "api/v1/Notification/get-notification",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationAnnonce.DTO.NotificationDto, ApplicationAnnonce, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.NotificationController",
    "Method": "GetById",
    "RelativePath": "api/v1/Notification/get-notification/{notificationId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "notificationId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationAnnonce.DTO.NotificationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.NotificationController",
    "Method": "CreateAnnonce",
    "RelativePath": "api/v1/Notification/post-notification",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "notificationDto",
        "Type": "ApplicationAnnonce.DTO.AddNotificationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationAnnonce.DTO.AddNotificationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.NotificationController",
    "Method": "UpdateAnnonce",
    "RelativePath": "api/v1/Notification/supress-notification/{notificationId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "notificationId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.NotificationController",
    "Method": "UpdateAnnonce",
    "RelativePath": "api/v1/Notification/update-notification/{notifId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "notifId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "annonce",
        "Type": "ApplicationAnnonce.DTO.UpdateNotificationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.PieceController",
    "Method": "CreatePiece",
    "RelativePath": "api/v1/Piece",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "addpiece",
        "Type": "ApplicationTheather.DTO.AddPieceDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.PieceController",
    "Method": "Delete",
    "RelativePath": "api/v1/Piece/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationTheather.DTO.PieceDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.PieceController",
    "Method": "GetAllPiece",
    "RelativePath": "api/v1/Piece/{page}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.DataType.Pagination\u00601[[ApplicationTheather.DTO.PieceDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.PieceController",
    "Method": "UpdatePiece",
    "RelativePath": "api/v1/Piece/{updtId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updtId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "Titre",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Duree",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Description",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Auteur",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ImageFile",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "Image",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ThemeId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "Id",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "AddedTime",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.PieceController",
    "Method": "AddPieceToCatalogue",
    "RelativePath": "api/v1/Piece/add-catalogue/{catalogueId}/{pieceId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "catalogueId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "pieceId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.PieceController",
    "Method": "GetByCatalogueId",
    "RelativePath": "api/v1/Piece/catalogue/{catalogueId}/{page}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "catalogueId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.PieceDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.PieceController",
    "Method": "GetAllPieceList",
    "RelativePath": "api/v1/Piece/list",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[System.Collections.Generic.IEnumerable\u00601[[ApplicationTheather.DTO.PieceDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.PieceController",
    "Method": "RemovePieceFromCatalogue",
    "RelativePath": "api/v1/Piece/remove-catalogue/{catalogueId}/{pieceId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "catalogueId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "pieceId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.PieceController",
    "Method": "GetById",
    "RelativePath": "api/v1/Piece/single/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.PieceDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.PieceController",
    "Method": "GetByThemeId",
    "RelativePath": "api/v1/Piece/theme/{themeId}/{page}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "themeId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.PieceDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.PostController",
    "Method": "GetPostById",
    "RelativePath": "api/v1/Post/{postById}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "postById",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.PostController",
    "Method": "DeletePostFromPublication",
    "RelativePath": "api/v1/Post/{postById}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "postById",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.PostController",
    "Method": "UpdatePostfromPublication",
    "RelativePath": "api/v1/Post/{publicationById}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "postById",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "content",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "publicationById",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.PostController",
    "Method": "CreatePublication",
    "RelativePath": "api/v1/Post/{publicationById}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "publicationById",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "AddPost",
        "Type": "ApplicationPublication.Dto.AddPostDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationPublication.Dto.PostDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.PostController",
    "Method": "IsAuthor",
    "RelativePath": "api/v1/Post/iswriter/{postId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "PostId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.PostController",
    "Method": "GetAllPostFromPublication",
    "RelativePath": "api/v1/Post/publication-all/{publicationId}/{page}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "publicationId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationPublication.Dto.PostDto, ApplicationPublication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.PostController",
    "Method": "GetAllPostFromUser",
    "RelativePath": "api/v1/Post/user/{publicationId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "publicationId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationPublication.Dto.PostDto, ApplicationPublication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.PublicationController",
    "Method": "GetpublicationByPieceId",
    "RelativePath": "api/v1/Publication/by-piece/{page}/{pieceId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "pieceId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.PublicationController",
    "Method": "CreatePublication",
    "RelativePath": "api/v1/Publication/create-publication",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "AddPublication",
        "Type": "ApplicationPublication.Dto.AddPublicationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationPublication.Dto.AddPublicationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.PublicationController",
    "Method": "DeletePublication",
    "RelativePath": "api/v1/Publication/delete-publication/{publicationById}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "publicationById",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.PublicationController",
    "Method": "HasReview",
    "RelativePath": "api/v1/Publication/hasreview/{pieceId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pieceId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.PublicationController",
    "Method": "IsAuthor",
    "RelativePath": "api/v1/Publication/iswriter/{publicationId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "publicationId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.PublicationController",
    "Method": "GetAllPublication",
    "RelativePath": "api/v1/Publication/publication-all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationPublication.Dto.PublicationDto, ApplicationPublication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.PublicationController",
    "Method": "GetPublicationById",
    "RelativePath": "api/v1/Publication/publication-by-id/{publicationId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "publicationId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationPublication.Dto.PublicationDto, ApplicationPublication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.PublicationController",
    "Method": "GetPublicationByUser",
    "RelativePath": "api/v1/Publication/publication-by-user/{page}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationPublication.Dto.PublicationDto, ApplicationPublication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.PublicationController",
    "Method": "GetPublicationByUser",
    "RelativePath": "api/v1/Publication/publication-by-user/{userId}/{page}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationPublication.Dto.PublicationDto, ApplicationPublication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.PublicationController",
    "Method": "UpdatePublication",
    "RelativePath": "api/v1/Publication/update-publication/{publicationById}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "publicationById",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "Title",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Content",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.RepresentationController",
    "Method": "Createrepresentation",
    "RelativePath": "api/v1/Representation",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "entity",
        "Type": "ApplicationTheather.DTO.AddRepresentationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.RepresentationController",
    "Method": "GetById",
    "RelativePath": "api/v1/Representation/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.RepresentationDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.RepresentationController",
    "Method": "DeleteRepresentation",
    "RelativePath": "api/v1/Representation/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.RepresentationController",
    "Method": "UpdateRepresentation",
    "RelativePath": "api/v1/Representation/{updtId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updtId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "entity",
        "Type": "ApplicationTheather.DTO.UpdateRepresentationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.RepresentationController",
    "Method": "GetAll",
    "RelativePath": "api/v1/Representation/bypage/{page}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationTheather.DTO.RepresentationDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.RepresentationController",
    "Method": "GetAllpieceById",
    "RelativePath": "api/v1/Representation/from-piece/{pieceId}/{page}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pieceId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.DataType.Pagination\u00601[[ApplicationTheather.DTO.RepresentationDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.RepresentationController",
    "Method": "GetAllSalleById",
    "RelativePath": "api/v1/Representation/from-salle/{salleId}/{page}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "salleId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.DataType.Pagination\u00601[[ApplicationTheather.DTO.RepresentationDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.SallesDeTheatreController",
    "Method": "CreateSalle",
    "RelativePath": "api/v1/SallesDeTheatre",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Entity",
        "Type": "ApplicationTheather.DTO.AddSalleDeTheatreDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.SallesDeTheatreController",
    "Method": "DeleteSalle",
    "RelativePath": "api/v1/SallesDeTheatre/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.SallesDeTheatreController",
    "Method": "GetAllSalle",
    "RelativePath": "api/v1/SallesDeTheatre/{page}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.DataType.Pagination\u00601[[ApplicationTheather.DTO.SalleDeTheatreDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.SallesDeTheatreController",
    "Method": "Update",
    "RelativePath": "api/v1/SallesDeTheatre/{updtId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updtId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "Entity",
        "Type": "ApplicationTheather.DTO.UpdateSalleDeTheatreDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.SalleDeTheatreDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.SallesDeTheatreController",
    "Method": "GetSalleByComplexe",
    "RelativePath": "api/v1/SallesDeTheatre/get-complexe/{id}/{page}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.DataType.Pagination\u00601[[ApplicationTheather.DTO.SalleDeTheatreDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.SallesDeTheatreController",
    "Method": "GetAllSallelist",
    "RelativePath": "api/v1/SallesDeTheatre/list",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationTheather.DTO.SalleDeTheatreDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.SallesDeTheatreController",
    "Method": "GetSalleById",
    "RelativePath": "api/v1/SallesDeTheatre/single/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.SalleDeTheatreDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.SiegeController",
    "Method": "CreateSiege",
    "RelativePath": "api/v1/Siege",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ApplicationTheather.DTO.AddSiegeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.SiegeController",
    "Method": "GetSiegeById",
    "RelativePath": "api/v1/Siege/{siegeId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "siegeId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationTheather.DTO.SiegeDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.SiegeController",
    "Method": "UpdateSiege",
    "RelativePath": "api/v1/Siege/{siegeId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "siegeId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "ApplicationTheather.DTO.UpdateSiegeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.SiegeController",
    "Method": "DeleteSiege",
    "RelativePath": "api/v1/Siege/{siegeId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "siegeId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.SiegeController",
    "Method": "GetSiegeFromCommand",
    "RelativePath": "api/v1/Siege/from-command/{commandId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "commandId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationTheather.DTO.SiegeDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.SiegeController",
    "Method": "GetSiegeFromSalle",
    "RelativePath": "api/v1/Siege/from-salle/{salleId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "salleId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationTheather.DTO.SiegeDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.SiegeController",
    "Method": "GetSiegeFromSalle",
    "RelativePath": "api/v1/Siege/from-salle/{salleId}/{page}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "salleId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "Page",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.DataType.Pagination\u00601[[ApplicationTheather.DTO.SiegeDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.StripeController",
    "Method": "CreateCheckoutSession",
    "RelativePath": "api/v1/Stripe/check-out/{ticketNumber}/{price}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ticketNumber",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "price",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "getPiece",
        "Type": "ApplicationTheather.DTO.PieceDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.TheatreController",
    "Method": "GetAllTheme",
    "RelativePath": "api/v1/Theatre",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ApplicationTheather.DTO.ThemeDto, ApplicationTheather, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.TheatreController",
    "Method": "CreateTheme",
    "RelativePath": "api/v1/Theatre",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "theme",
        "Type": "ApplicationTheather.DTO.ThemeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.ThemeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.TheatreController",
    "Method": "UpdateTheme",
    "RelativePath": "api/v1/Theatre",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "themeId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "theme",
        "Type": "ApplicationTheather.DTO.ThemeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.ThemeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.TheatreController",
    "Method": "DeleteTheme",
    "RelativePath": "api/v1/Theatre",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "themeId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.ThemeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.Theater.TheatreController",
    "Method": "GetThemeById",
    "RelativePath": "api/v1/Theatre/{themeId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "themeId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ApplicationTheather.DTO.ThemeDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.UserController",
    "Method": "UpdateUserInformation",
    "RelativePath": "api/v1/User",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userToupdate",
        "Type": "ApplicationUser.Dto.User.UpdateUserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.UserController",
    "Method": "GetUserId",
    "RelativePath": "api/v1/User/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Domain.ServiceResponse.ServiceResponse\u00601[[ApplicationUser.Dto.User.UserDto, ApplicationUser, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WebApi.Controllers.UserController",
    "Method": "GetUserIds",
    "RelativePath": "api/v1/User/fromlist",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userIds",
        "Type": "System.Collections.Generic.List\u00601[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.UserController",
    "Method": "DeleteUserID",
    "RelativePath": "api/v1/User/userId",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.UserController",
    "Method": "BlockUser",
    "RelativePath": "block/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.UserController",
    "Method": "Nominateadmin",
    "RelativePath": "nom-admin/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.UserController",
    "Method": "UnBlockUser",
    "RelativePath": "unblock/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WebApi.Controllers.UserController",
    "Method": "UnNominateAdmin",
    "RelativePath": "unnom-admin/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]