@using Blazor.UI.Data.ServiceResult
@using Blazor.UI.Data.services.Annonce
@using Blazor.UI.Data.ModelViews.Annonce
@inject IAnnonceService AnnonceService;
@inject NavigationManager manager;

<div class="m-2 p-2 shadow-sm">

    @if (GetAnnonceDto != null)
    {
        <hr class="featurette-divider">
        <h3>Vos Annonces</h3>

        <div class="row featurette">
            <div class="col-md-5">
               <img class="img-fluid" src="Image/masks-310474_1920.png" />
            </div>
            <div class="col-md-7 " title="regarder les annonces" @onclick="()=> GetToAnnonce()">
                <ul class="list-group list-group-flush">
                    @foreach (AnnonceDto? item in GetAnnonceDto.Items)
                    {

                        <li class="list-group-item">
                            <h4 class="text-end">@item.CreatedDate</h4>
                            <h2 class="lead text-center"><strong>@item.Title</strong></h2>
                        </li>

                    }
                </ul>
            </div>

        </div>

    }
    else
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
</div>
@code {
    public Pagination<AnnonceDto> GetAnnonceDto { get; set; }
    public int pageIndex { get; set; } = 1;
    protected override async Task OnInitializedAsync()
    {
        GetAnnonceDto = await AnnonceService.GetAll(pageIndex);
      
    }
    #region pagination
    public async Task NextPage()
    {
        if (GetAnnonceDto.HasNextPage)
        {
            pageIndex++;
            GetAnnonceDto = await AnnonceService.GetAll(pageIndex);
        }
    }
    public async Task PreviousPage()
    {
        if (GetAnnonceDto.HasPreviousPage)
        {
            pageIndex--;
            GetAnnonceDto = await AnnonceService.GetAll(pageIndex);
        }
    }
    #endregion
    #region Page
    public void GetToAnnonce()
    {
        manager.NavigateTo("/Annonce");  
    }
    #endregion
    #region Callback 

    public bool OpenDialogBox { get; set; } = false;
    private void DeleteDialogOPen()
    {
        OpenDialogBox = true;
        StateHasChanged();
    }
    private void DeleteDialogclose()
    {
        OpenDialogBox = false;
        StateHasChanged();
    }
    #endregion
}
