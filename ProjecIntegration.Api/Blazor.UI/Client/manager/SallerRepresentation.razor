@page "/manager/salle"
@using Blazor.UI.Data.ServiceResult
@using Blazor.UI.Data.modelViews.Theater
@using Blazor.UI.Data.services.TheatherService
@using Microsoft.AspNetCore.Components.QuickGrid

@inject NavigationManager manager;
@inject ISalleService Servsalle;
@inject IRepresentationService Servrep;


<div class="m-4 p-4">
    <h3 class="card-header display-4">SallePiece</h3>
    <div class="row p-2">
        @if (salleTab != null)
        {
        <QuickGrid Items="@salleTab.AsQueryable()">
                <PropertyColumn Property="@(p => p.Id)" Sortable="true">
                </PropertyColumn>
                <PropertyColumn Property="@(p => p.Name)" Sortable="true" />
                <PropertyColumn Property="@(p =>p.PlaceMax)" Sortable="true" />
                    <TemplateColumn >
                        <div>
                        <button type="button" class="btn shadow btn-warning" @onclick="() => loadrepresentation(context.Id)">Details</button>
                        </div>
                    </TemplateColumn>
                    <TemplateColumn >
                        <div>
                        <button type="button" class="btn shadow btn-warning" @onclick="() => updateSalle(context)">update une salle</button>
                        </div>
                    </TemplateColumn>
                    <TemplateColumn >
                    <div>
                        <button type="button" class="btn  shadow btn-warning" @onclick="() => addpieceSalle()">ajouter une salle</button>
                    </div>
                </TemplateColumn>
                <TemplateColumn>
                    <div>
                        <button type="button" class="btn  shadow btn-warning" @onclick="() => addpiecePage(context.Id)">ajoutd'un Piece</button>
                    </div>
                </TemplateColumn>
            </QuickGrid>

        }
        else
        {
            <Blazor.UI.Client.Shared.Load></Blazor.UI.Client.Shared.Load>
        }
    </div>
    <br />
    <div class="row">
        @if (selectsalle != null)
        {
            <div class="col">
                @if (isUpdate && !isdetail && !isAddPiece)
                {
                    
                }
                else if (isAddPiece && !isUpdate && !isdetail)
                {
                }
                else if (!isAddPiece && !isUpdate && isdetail)
                {

               
                }
                else
                {
                    <div class="card pe-4 ps-4 pt-2 pb-2">
                        <div class="container bg-light">
                            
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
        
        }
    </div>
</div>

@code {
    public IEnumerable<SalleDeTheatreDto>? salleTab { get; set; } 
    public Pagination<RepresentationDto>? representation { get; set; }
    public SalleDeTheatreDto? selectsalle { get; set; }
    public int SalleId;
    public int pageIndex=1;
    public bool isUpdate { get; set; }
    public bool isdetail { get; set; }
    public bool isAddPiece { get; set; }

    protected override async Task OnInitializedAsync()
    {
        salleTab = await Servsalle.Getlist();
        await Task.Delay(1000);
        isdetail = true;
        isUpdate = false;
        isAddPiece = false;

    }
    public async Task loadrepresentation(int item)
    {
        SalleId = item;
        representation = await Servrep.GetSalle(item,pageIndex);
        await Task.Delay(100);
        isdetail = true;
        isUpdate = false;
        isAddPiece = false;
    }
    public void updateSalle(SalleDeTheatreDto updtheatre)
    {
        isUpdate = true;
        isdetail = false;
        isAddPiece = false;
        selectsalle = updtheatre;
    }
    public void addpieceSalle()
    {
        isUpdate = false;
        isdetail = false;
        isAddPiece = true;
    }
    public void addpiecePage(int id)
    {
        manager.NavigateTo($"/addPiece/{id}");
    }
    public async Task NextPage()
    {
        if (representation.HasNextPage)
        {
            pageIndex++;
            representation = await Servrep.GetSalle(SalleId,pageIndex);
        }
    }
    public async Task PreviousPage()
    {
        if (representation.HasPreviousPage)
        {
            pageIndex++;
            representation = await Servrep.GetSalle(SalleId ,pageIndex);
        }
    }
}