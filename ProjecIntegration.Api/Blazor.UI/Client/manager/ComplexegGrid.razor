@page "/manager/complexe"
@using Blazor.UI.data.modelViews
@using Microsoft.AspNetCore.Components.QuickGrid
@using Blazor.UI.data.services
@inject IComplexeService comp;
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager;
<PageTitle>Complexe</PageTitle>
<h1>Complexe grid</h1>

@if (complexetab == null)
{
   <Blazor.UI.Client.Shared.Load></Blazor.UI.Client.Shared.Load>
}
else
{
   <div class="shadow-sm border-rounded">

    <QuickGrid Items="@complexetab.AsQueryable()">
    <PropertyColumn Property="@(p => p.Id)" Sortable="true">
        <TemplateColumn Context="item">
            <div>
                @item.Id
                <button @onclick="() => NavigateToDetails(item.Id)">View Details</button>
            </div>
        </TemplateColumn>
    </PropertyColumn>
    <PropertyColumn Property="@(p => p.Name)" Sortable="true" />
    <PropertyColumn Property="@(p => p.Description)" Sortable="true" />
    <PropertyColumn Property="@(p => p.SalleDeTheatres.Capacity)" Sortable="true" >
      
    </PropertyColumn>
</QuickGrid>
 
   </div>
}

@code {
    private IEnumerable<ComplexeDto>? complexetab { get; set; }

    protected override async Task OnInitializedAsync()
    {
        complexetab = await comp.Get();
    }

    private void NavigateToDetails(int id)
    {
        NavigationManager.NavigateTo($"/details/{id}");
    }
    private void AddComplexe()
    {
        NavigationManager.NavigateTo($"/addComplexe");
    }
    private void AddTheater(int id)
    {
        NavigationManager.NavigateTo($"/addTheather/{id}");
    }
}
