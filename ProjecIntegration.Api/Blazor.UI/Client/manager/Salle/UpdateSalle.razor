
@using Blazor.UI.Data.ModelViews.Theater
@using Blazor.UI.Data.services.TheatherService
@using Microsoft.AspNetCore.Components.QuickGrid
@inject NavigationManager manager;
@inject IComplexeService ComplexesService;
@inject ISalleService SalleService;

<div class="flex-fill m-4 p-4">
    <h3>Mise a jour d'une salle de théatre</h3>
    <div class="card">
        <div class="card-body">

            @if (SelectedSalle != null)
            {
                <form>
                    <div class="col-form-label">
                        <div>
                            <label class="form-label" for="name">Name:</label>
                            <input class="form-control" id="name" @bind="SelectedSalle .Name" />
                        </div>
                        <div>
                            <label class="form-label" for="placeMax">Place Max:</label>
                            <input class="form-control" id="placeMax" @bind="SelectedSalle.PlaceMax" type="number" />
                        </div>

                        <div>
                            <label class="form-label" for="complexeId">Complexe ID:</label>
                            <select class="form-control" @bind="SelectComplexeId" @oninput="OnSelectedChange">
                                <option>choissisez le complexe </option>
                                @foreach (ComplexeDto item in AllComplexe)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            </select>
                        </div>

                        <div class="m-2 p-2">
                            <button type="button" class="btn btn-success" @onclick="() => UpdateSalleDeTheatre(SelectedSalle)">Update SalleDeTheatre</button>
                        </div>
                    </div>
                </form>
            }
            else
            {
                <p>No SalleDeTheatre provided</p>
            }
        </div>
    </div>

</div>

@code {
    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public SalleDeTheatreDto SelectedSalle { get; set; } = new();
    public int SelecteSalleId { get; set; }
    public List<ComplexeDto> AllComplexe { get; set; } = new(); 
    public int SelectComplexeId { get; set; }

    protected async override Task OnInitializedAsync()
    { 
        if (Id == 0)
        { 
            Id = 1;
        }
        AllComplexe = (await ComplexesService.Get()).ToList();
        SelectedSalle = await SalleService.GetById(Id);
        await Task.Delay(1000);
        SelecteSalleId = Id;

    }
    private async Task UpdateSalleDeTheatre(SalleDeTheatreDto updateInfo)
    {
        UpdateSalleDeTheatreDto updatedsalle = new UpdateSalleDeTheatreDto
            {
                Name = updateInfo.Name,
                ComplexeId = SelectComplexeId,
                PlaceMax = updateInfo.PlaceMax,
                AddedTime = DateTime.Now,
                Id = SelecteSalleId
        };
        await SalleService.Update(SelecteSalleId, updatedsalle);
    }
    public void OnSelectedChange(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        if (int.TryParse(args.Value?.ToString(), out int selectedId))
        {
            SelectComplexeId = selectedId;
        }

    }
    private void GetAllSalle(int complexeId)
    {
        manager.NavigateTo($"/manager/sallebycomplexe/{complexeId}");
    }
}
