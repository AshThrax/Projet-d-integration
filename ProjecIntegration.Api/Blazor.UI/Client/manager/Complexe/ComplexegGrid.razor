@page "/manager/complexe"
@using Blazor.UI.Data.modelViews.Theater
@using Blazor.UI.Data.services.TheatherService
@using Microsoft.AspNetCore.Components.QuickGrid

@inject IComplexeService comp;
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager;
<PageTitle>Complexe</PageTitle>
<div class="flex-fill m-4 p-4">

    <h1>Gestion des Complexe</h1>
    <div class="m-4 p-4">
        <div class=" btn-group rounded float-end">
            <div class="col"></div>
            <div class="col"></div>
            <div class="col"></div>
            <button type="button" class="col col-sm-3  btn btn-primary" @onclick="AddComplexe">Ajouter un Complexe</button>
            <button type="button" class="col col-sm-3   btn btn-primary" @onclick="AddSalle">Ajouter une Salle</button>
            <button type="button" class="col col-sm-3   btn btn-primary" @onclick="()=> GetAllCatalogue(SelectComplexeId)">Acceder au catalogue un Catalogue</button>
        </div>
    </div>
    <br />
    <div class="jumbotron  m-2 p-2">
        <div class="row">
            <div class="col bg-white m-4 p-4 w-50 shadow-sm rounded">

                @if (complexetab == null)
                {
                    <Blazor.UI.Client.Shared.Load></Blazor.UI.Client.Shared.Load>
                }
                else
                {
                    <div class="">

                        <QuickGrid Items="@complexetab.AsQueryable()">
                            <PropertyColumn Property="@(p => p.Id)" Sortable="true" />
                            <PropertyColumn Property="@(p => p.Name)" Sortable="true" />
                            <PropertyColumn Property="@(p => p.Description)" Sortable="true" />
                            <TemplateColumn Context="item">
                                <div>
                                    <button type="button" class="btn btn-warning" @onclick="() =>SelectComplexedetails(item) " >View Details</button>
                                </div>
                            </TemplateColumn>
                        
                        </QuickGrid>

                    </div>
                }
            </div>
            <div class="col bg-white  m-4 p-4 w-50 rounded">
                @if(SelectComplexe !=null && SelectComplexeId !=0)
                {
                    <div class=" form-group mb-3">
                        <h4 class="form-label">Nom:</h4>
                        <p>@SelectComplexe?.Name</p>

                        <h4 class="form-label">Description:</h4>
                        <p>@SelectComplexe?.Description</p>

                        <h4 class="form-label">Address:</h4>
                        <p>@SelectComplexe?.Adress</p>

                        <h4 class="form-label" for="address">Address:</h4>
                        <p>@SelectComplexe?.AddedTime</p>
                        <h4 l class="form-label" for="address">Salle </h4>
                        @if (SelectComplexe?.SalleDeTheatres?.Count > 0)
                        {
                            <p>Possède: @SelectComplexe?.SalleDeTheatres?.Count: Salle De théatre </p>
                            <p>@SelectComplexe?.Catalogue?.Count</p>

                        }
                        else
                        {
                            <p>Ce Complexe ne Possède pas encore de Salle</p>

                        }
                        <h4 l class="form-label" for="address">Catalogue </h4>
                        @if (SelectComplexe?.Catalogue?.Count >0)
                        {
                            <p>Possède :  @SelectComplexe?.Catalogue?.Count : Catalogue </p>
                            <p>@SelectComplexe?.Catalogue?.Count</p>
                        
                        }
                        else
                        {
                            <p>Ce Complexe ne Possède pas encore de Catalogue</p>
                   
                        }

                        <!-- Add other input fields based on your UpdateComplexeDto properties -->
                        <br />

                        <div class="float-end">

                            <button class="btn btn-primary" @onclick="()=>GetSalleByComplexe(SelectComplexeId)" type="button">Salle De théatre</button>
                        </div>
                        
                    
                    </div>

                }
                else
                {
                    <Blazor.UI.Client.Shared.Load></Blazor.UI.Client.Shared.Load>
                
                }
            </div>
        </div>
 
    </div>
</div>

@code {
    private List<ComplexeDto>? complexetab { get; set; } = new();
    private ComplexeDto? SelectComplexe { get; set; } = new();
    private int SelectComplexeId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            complexetab =( await comp.Get()).ToList();

            await Task.Delay(1000);
        }
        catch (Exception)
        {

            complexetab = new List<ComplexeDto>();
        }
    }
    public void SelectComplexedetails(ComplexeDto complexe)
    {
        try
        {
            SelectComplexe = complexe;
            SelectComplexeId = SelectComplexe.Id;
        }
        catch (Exception)
        {

            SelectComplexe = new();
            SelectComplexeId = 0;
        }
    }
    private void NavigateToDetails(int id)
    {
        NavigationManager.NavigateTo($"/details/{id}");
    }
    private void AddComplexe()
    {
        NavigationManager.NavigateTo($"/manager/addComplexe");
    }
    private void AddSalle()
    {
        NavigationManager.NavigateTo($"/manager/addSalle");
    }
    private void AddCatalogue()
    {
        NavigationManager.NavigateTo($"/manager/addCatalogue");
    }
    private void GetAllCatalogue(int id)
    {
        NavigationManager.NavigateTo($"/manager/catalogue/{id}");
    }
    private void GetSalleByComplexe(int id)
    {
        NavigationManager.NavigateTo($"/manager/sallebycomplexe/{id}");
    }
}
