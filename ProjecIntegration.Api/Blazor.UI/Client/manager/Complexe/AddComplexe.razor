@page "/manager/addComplexe"
@using Blazor.UI.Data.ModelViews.Theater
@using Blazor.UI.Data.services.TheatherService

@inject NavigationManager manager;
@inject IComplexeService ComplexeService;
<h3>Ajouter un complexe</h3>
<div>
    <p>ajout de complexe</p>
    <div class="m-4 p-4">
        <div class=" btn-group rounded float-end">
           
            <button type="button" class="col col-sm-3  btn btn-warning" @onclick="GetAll">Voir les Complexes</button>
           
        </div>
    </div>
    <br />
</div>
<div class="m-4 p-4">
    <div class="m-2 p-2">
        <div class="m-2 p-2 card rounded w-50">
            @if (AddedComplexe != null)
            {
                <div class="card-header">
                    <h3> ajouter un complexe a la base de donnéé</h3>
                </div>
                <form class="m-1 bg-white">
                    <div class="col-form-label">
                        <div>
                            <label class="form-label" for="name">Name:</label>
                            <input class="form-control" id="name" @bind="AddedComplexe .Name" />

                        </div>
                        <div>
                            <label class="form-label" for="description">Description:</label>
                            <input class="form-control" id="description" @bind="AddedComplexe .Description" />
                        </div>
                        <div>
                            <label class="form-label" for="address">Address:</label>
                            <input class="form-control" id="address" @bind="AddedComplexe .Adress" />
                        </div>

                        <!-- Add other input fields based on your UpdateComplexeDto properties -->
                        <br />
                        <button type="button" class="btn btn-warning" @onclick="() =>MyAddComplexe()">Update Complexe</button>
                    </div>
                </form>
            }
            else
            {
                <Blazor.UI.Client.Shared.Load loadParam="No Complexe provided"></Blazor.UI.Client.Shared.Load>
            }
      
        </div>
    </div>
</div>
@code {
    public AddComplexeDto AddedComplexe { get; set; } = new AddComplexeDto();

    public async Task MyAddComplexe()
    {
        AddComplexeDto UpdtoDate = new AddComplexeDto
            {

                Name = AddedComplexe.Name,
                Adress = AddedComplexe.Adress,
                Description = AddedComplexe.Description,

            };
        await ComplexeService.Create(UpdtoDate);

    }
    public void GetAll()
    {
        manager.NavigateTo("/manager/Complexe");
    }
  }