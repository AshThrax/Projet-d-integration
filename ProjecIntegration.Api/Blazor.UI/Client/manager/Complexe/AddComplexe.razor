@page "/manager/addComplexe"
@using Blazor.UI.Data.modelViews.Theater
@using Blazor.UI.Data.services.TheatherService

@inject NavigationManager manager;
@inject IComplexeService ComplexeService;
<h3>Ajouter un complexe</h3>
<div>
    <p>ajout de complexe</p>
    <div class="m-4 p-4">
        <div class=" btn-group rounded float-end">
            <div class="col"></div>
            <div class="col"></div>
            <div class="col"></div>
            <button type="button" class="col col-sm-3  btn btn-warning" @onclick="GetAll">Voir les Complexes</button>
           
        </div>
    </div>
    <br />
</div>
<div class="m-2 p-2 w-25">
    <div>
        @if (MyAddComplexe != null)
        {
            <form>
                <div class=" form-group mb-3">
                    <label class="form-label" for="name">Name:</label>
                    <input class="form-control" id="name" @bind="AddedComplexe .Name" />

                    <label class="form-label" for="description">Description:</label>
                    <input class="form-control" id="description" @bind="AddedComplexe .Description" />

                    <label class="form-label" for="address">Address:</label>
                    <input class="form-control" id="address" @bind="AddedComplexe .Adress" />

                    <!-- Add other input fields based on your UpdateComplexeDto properties -->
                    <br />
                    <button type="button" class="btn btn-warning" @onclick="MyAddComplexe">Update Complexe</button>
                </div>
            </form>
        }
        else
        {
            <Blazor.UI.Client.Shared.Load loadParam="No Complexe provided"></Blazor.UI.Client.Shared.Load>
        }
      
    </div>
</div>
@code {
    public AddComplexeDto AddedComplexe { get; set; } = new AddComplexeDto();

    public void MyAddComplexe()
    {
        AddComplexeDto UpdtoDate = new AddComplexeDto
            {

                Name = AddedComplexe.Name,
                Adress = AddedComplexe.Adress,
                Description = AddedComplexe.Description,

            };
        ComplexeService.Create(UpdtoDate);

    }
    public void GetAll()
    {
        manager.NavigateTo("/manager/Complexe");
    }
  }