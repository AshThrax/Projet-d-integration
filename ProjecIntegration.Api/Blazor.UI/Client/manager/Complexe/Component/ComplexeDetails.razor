@using Blazor.UI.Data.ModelViews.Theater
@using Blazor.UI.Data.services.TheatherService
@inject IComplexeService complexeService;
@inject NavigationManager NavigationManager;

<h3>ComplexeDetails</h3>
<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@Title</h4>
                <button @onclick="()=>ModalCancel()" type="button" class="btn btn-danger m-2"><i class="bi bi-bag-x-fill"></i></button>
            </div>
            <div class="modal-body">
                @if (SelectComplexe != null)
                {
                    <div class=" form-group mb-3">
                        <h4 class="form-label">Nom:</h4>
                        <p>@SelectComplexe?.Name</p>

                        <h4 class="form-label">Description:</h4>
                        <p>@SelectComplexe?.Description</p>

                        <h4 class="form-label">Address:</h4>
                        <p>@SelectComplexe?.Adress</p>

                        <h4 class="form-label" for="address">CreationDate:</h4>
                        <p>@SelectComplexe?.AddedTime</p>
                        <h4 l class="form-label" for="address">Salle </h4>
                        @if (SelectComplexe?.SalleDeTheatres?.Count > 0)
                        {
                            <p>Possède: @SelectComplexe?.SalleDeTheatres?.Count: Salle De théatre </p>
                            <p>@SelectComplexe?.Catalogue?.Count</p>

                        }
                        else
                        {
                            <p>Ce Complexe ne Possède pas encore de Salle</p>

                        }
                        <h4 l class="form-label" for="address">Catalogue </h4>
                        @if (SelectComplexe?.Catalogue?.Count > 0)
                        {
                            <p>Possède :  @SelectComplexe?.Catalogue?.Count : Catalogue </p>
                            <p>@SelectComplexe?.Catalogue?.Count</p>

                        }
                        else
                        {
                            <p>Ce Complexe ne Possède pas encore de Catalogue</p>

                        }

                        <!-- Add other input fields based on your UpdateComplexeDto properties -->
                        <br />

                        <div class="col-sm-6 btn-group-sm float-end">

                            <a class="btn btn-primary" @onclick="()=>GetSalleByComplexe(Id)" type="button">Salle De théatre</a>
                            <a type="button" class="btn btn-warning" @onclick="()=> GetAllCatalogue(Id)">Catalogue</a>
                        </div>


                    </div>

                }
                else
                {


                }
            </div>
            <div class="modal-footer">
                <button @onclick="()=>ModalOk()" type="button" class="btn btn-primary"> Ok</button>
            </div>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public int Id { get; set; }
    public ComplexeDto SelectComplexe { get; set; }
    protected override async Task OnInitializedAsync()
    {
        SelectComplexe = await complexeService.GetById(Id);
    }
    #region  modale state
    [Parameter]
    public string Title { get; set; } = "ComplexeDetails";
    [Parameter]
    public string Text { get; set; } = string.Empty;
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }
    private Task ModalOk()
    {
        return OnClose.InvokeAsync(true);
    }
    #endregion
    #region 
    private void GetAllCatalogue(int id)
    {
        NavigationManager.NavigateTo($"/manager/catalogue/{id}");
    }
    private void GetSalleByComplexe(int id)
    {
        NavigationManager.NavigateTo($"/manager/sallebycomplexe/{id}");
    }
    #endregion
}
