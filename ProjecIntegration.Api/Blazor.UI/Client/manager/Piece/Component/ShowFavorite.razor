@using Blazor.UI.Data.ServiceResult
@using Blazor.UI.Data.Services.TheatherService
@using Microsoft.AspNetCore.Components.QuickGrid
@using Blazor.UI.Data.ModelViews.Theater

@inject IFavorisService favorisService
@inject NavigationManager manager;

<div class="nav float-end m-2 p-2">
            <div class="btn-group">
                    <a class="btn btn-outline-dark" @onclick="() =>previousPage()">Previous</a>
                    <a class="btn btn-outline-dark" @onclick="() =>Nextpage()">Next</a>
                </div>
            </div>
<div>
<div class="shadow-sm m-2 p-2">
    <h6 class="m-b-20 p-b-5 b-b-default f-w-600">Favoris</h6>
        @if(GetFavoritePiece !=null)
        {
            @foreach (PieceDto item in GetFavoritePiece.Items)
            {
                <div class="bg-white row featurette  rounded shadow mb-2 pb-2">
                    <div class="m-2 p-2">
                        <div class="col-md-5 p-2">
                            <div class="card-img">
                                <img class="" src="https://localhost:7170/Resources/@item.Image" />
                            </div>
                        </div>
                        <div class="col-md-7 p-2">
                            <p class="card-text"><strong>Auteur :</strong>@item?.Auteur</p>
                            <p class="card-text"><strong>Description :</strong>@item?.Description</p>
                            <p class="card-text"><strong>Durée de la pièce :</strong>@item?.Duree</p>
                            <div class="btn-group">
                                <a @onclick="() => DeleteFavoris(item.Id)" type="button" class="btn btn-danger  shadow-sm">supprimer des favoris</a>
                            </div>
                        </div>
                    </div>
                </div>
            }

        }
        else
        {
            <h3> vous n'avez pas de piece dans votre section Favorite</h3>
            <h3><button type="button" class="btn btn-outline-dark" @onclick="() =>Create()">Désirez vous en Creer une liste de favoris?</button></h3>
        }
    </div>
</div>
@code {
    public Pagination<PieceDto>? GetFavoritePiece { get; set; }
    public int pageIndex { get; set; } = 1;

    protected async override Task OnInitializedAsync()
    {
        await Dataload();
    }
    public async Task Dataload()
    {
        GetFavoritePiece = await favorisService.GetFavoris(pageIndex);
    }
    public async Task Nextpage()
    {
        if (GetFavoritePiece.HasNextPage)
        {
            pageIndex++;
            GetFavoritePiece =await favorisService.GetFavoris(pageIndex);
        }

    }
    public async Task previousPage()
    {
        if (GetFavoritePiece.HasPreviousPage)
        {
            pageIndex--;
            GetFavoritePiece = await favorisService.GetFavoris(pageIndex);
        }

    }
    public async Task Create()
    {

        await favorisService.Create();
    }
    public async Task DeleteFavoris(int Id)
    {
        await favorisService.DeletePiece(pageIndex);
        await Dataload();
    }
    public void GetDescription(int id)
    {
        manager.NavigateTo($"/pieceinfo/{id}");
        ;
    }
    public void GetSeance(int id)
    {
        manager.NavigateTo($"/representation/{id}");
        ;
    }
    public void GetToPublication(int Id)
    {
        manager.NavigateTo($"/publicationbypiece/{Id}");
        ;
    }
}
