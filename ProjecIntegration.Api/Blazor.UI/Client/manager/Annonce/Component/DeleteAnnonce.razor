@using Blazor.UI.Data.services.Annonce
@inject IAnnonceService annonceService

<h3>DeleteAnnonce</h3>
<div>
    <div class="card-header"> </div>
    <div class="card-body">
        <h2>2tes vous sur de voulour supprimer cette Annonce</h2>
        
    </div>
    <div class="card-footer">
        <a class="btn btn-danger" @onclick="() => DeleteAnnonceAsync() "></a>
    </div>
</div>
<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@Title</h4>
                <a @onclick="()=>ModalCancel()" type="button" class="btn-danger btn m-2"><i class="bi bi-x-circle-fill "></i></a>
            </div>
            <div class="modal-body">
                <div>
                    <div class="card-header"> </div>
                    <div class="card-body">
                        <h2>Etes vous sur de voulour supprimer cette Annonce</h2>

                    </div>
                    <div class="card-footer">
                        <a class="btn btn-danger" @onclick="() => DeleteAnnonceAsync() ">Delete</a>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button @onclick="()=>ModalOk()" type="button" class="btn btn-primary"> Ok</button>
            </div>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
    public async Task DeleteAnnonceAsync()
    {
        await annonceService.DeleteAnnonce(Id);
        _ = ModalOk();
    }
    #region  modale state
    [Parameter]
    public string Title { get; set; } = string.Empty;
    [Parameter]
    public string Text { get; set; } = string.Empty;
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }
    private Task ModalOk()
    {
        return OnClose.InvokeAsync(true);
    }
    #endregion
}
