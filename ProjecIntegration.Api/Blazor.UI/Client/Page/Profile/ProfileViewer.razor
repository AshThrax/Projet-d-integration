@* Client/Pages/profileViewer.razor *@
@page "/profileViewer"
@using System.Security.Claims
@attribute [Authorize]      
@attribute [StreamRendering]
@using Blazor.UI.Data.ServiceResult
@using Blazor.UI.Data.modelViews.Publication
@using Blazor.UI.Data.modelViews.Theater
@using Blazor.UI.Data.services.TheatherService
@using Blazor.UI.data.modelViews
@using Blazor.UI.data.services
@inject ICommandService ServCom;
<PageTitle>Profile</PageTitle>
        <div class="row ">
            <div class="col">
                <ul class="nav nav-tabs">
                    <li class="nav-item">
                        <a type="button" class="btn btn-primary btn-success nav-link alert-success text-black" @onclick="() => ShowProfile()">
                             Profile
                        </a>
                    </li>
                    <li class="nav-item">
                        <a type="button" class="btn btn-primary btn-success nav-link alert-success text-black" @onclick="() => ShowCommand()">
                            Commande
                        </a>
                    </li>
                </ul>
                <br />
            </div>
        </div>
@if (userDto != null && CommandUser !=null)
{
    <div class="page-content page-container bodyUser" id="page-content">
        <div class="padding">
            <div class="row container d-flex justify-content-center">
                <div class="col-xl-6 col-md-12">
                    <div class="cardUser user-card-full">
                        <div class="row m-l-0 m-r-0">
                            <div class="col-sm-4 bg-c-lite-green user-profile">
                                <div class="card-block text-center text-white">
                                    <div class="m-b-25">
                                        <img src="@userDto.Picture" class="img-radius" alt="User-Profile-Image">
                                    </div>
                                    <h6 class="f-w-600">@userDto.Name</h6>
                                   
                                    <i class=" mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16"></i>
                                </div>
                            </div>
                            <div class="col-sm-8">
                                <div class="card-block">
                                        @if (isProfile)
                                        {
                                        <h6 class="m-b-20 p-b-5 b-b-default f-w-600">Information</h6>
                                        <div class="row">
                                            <Blazor.UI.Client.Page.Profile.Component.ProfileInfoComponent GetUser="@userDto">
                                            </Blazor.UI.Client.Page.Profile.Component.ProfileInfoComponent>
                                        </div>
                                    }
                                    else
                                    {
                                        if (CommandUser != null)
                                        {
                                            @if (CommandUser.Items != null && CommandUser.Items.Count > 0)
                                            {
                                                <h6 class="m-b-20 m-t-40 p-b-5 b-b-default f-w-600">Projects</h6>
                                                <div class="row">

                                                    <div class="col float-start  mb-4 mt-4 ps-2 pe-2 bg-light">
                                                        <Blazor.UI.Client.Page.MakeCommand.GetCommand lstCommand="CommandUser.Items"></Blazor.UI.Client.Page.MakeCommand.GetCommand>
                                                    </div>
                                                    <div class="">
                                                        <a class="btn btn-outline-dark" @onclick="PreviousPage">previous</a>
                                                        <a class="btn btn-outline-dark" @onclick="NextPage">suivant</a>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="card m-4 p-4 text-sm-center">
                                                <h2 class="card-header-tabs">vous n'avez pas de commande</h2>
                                                <p class="card-text"></p>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                           
                                        }
                                    }
                                    <ul class="social-link list-unstyled m-t-40 m-b-10">
                                        <li><a href="#!" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="facebook" data-abc="true"><i class="mdi mdi-facebook feather icon-facebook facebook" aria-hidden="true"></i></a></li>
                                        <li><a href="#!" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="twitter" data-abc="true"><i class="mdi mdi-twitter feather icon-twitter twitter" aria-hidden="true"></i></a></li>
                                        <li><a href="#!" data-toggle="tooltip" data-placement="bottom" title="" data-original-title="instagram" data-abc="true"><i class="mdi mdi-instagram feather icon-instagram instagram" aria-hidden="true"></i></a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
else
{
    
}
@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; } 

    public bool isProfile { get; set; } = true;
    public bool isCommand { get; set; }


    public Pagination<CommandDto>? CommandUser { get; set; }
    public UserDto? userDto { get; set; } = new();
    public int pageindex=1;
    protected override async Task OnInitializedAsync()
    {
        await auth();
        CommandUser = (await ServCom.GetByUser(1));
        await Task.Delay(1000);
        await base.OnInitializedAsync();
    }
    public async void GetAuth()
    {
        await ServCom.GetAuth();
    }
    public void ShowCommand()
    {
        isCommand = true;
        isProfile = false;
    }
    public void ShowProfile()
    {
        isProfile= true;
        isCommand = false;
    }
    protected async Task auth()
    {

        var state = await AuthenticationStateTask;
        userDto = new UserDto
        {
                Email = state?.User?.Claims?.FirstOrDefault(c => c.Type == "email")?.Value,
                FamilyName = state?.User.Claims.FirstOrDefault(c => c.Type == "family_name")?.Value,
                GivenName = state?.User.Claims.FirstOrDefault(c => c.Type == "given_name")?.Value,
                Name = state?.User.Claims.FirstOrDefault(c => c.Type == "user_name")?.Value,
                Picture = state?.User.Claims.FirstOrDefault(c => c.Type == "picture")?.Value,
                UserName = state?.User.Claims.FirstOrDefault(c => c.Type == "name")?.Value,
               
            
        };
    }
    public async Task NextPage()
    {
        if (CommandUser.HasNextPage)
        {
            pageindex++;
            CommandUser = await ServCom.GetByUser(pageindex);
        }
    }
    public async Task PreviousPage()
    {
        if (CommandUser.HasPreviousPage)
        {
            pageindex--;
            CommandUser = await (ServCom.GetByUser(pageindex));
        }    
    }
}
