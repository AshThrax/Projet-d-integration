@using Microsoft.AspNetCore.Components.QuickGrid;
@inject Blazor.UI.services.IPieceService ServPiece;
<div>
    <h3>ManagePiece</h3>
    <div>
        <QuickGrid Items="PieceComplexe.AsQueryable()">
           <PropertyColumn Property="p=>p.idSalle" Title="#"  />
            <PropertyColumn Property="p=>p.Titre" Title="titre" />
            <PropertyColumn Property="p=>p.Duree" Title="Duree" />
            <PropertyColumn Property="p=>p.Description" Title="Descritpion" />
            <TemplateColumn Title="Add">
                <div>
                    <button type="button" class="btn btn-warning"
                            @onclick="() =>AddPiece()">

                    </button>
                </div>
            </TemplateColumn>
            <TemplateColumn Title="Update">
                <div>
                    <button type="button" class="btn btn-warning"
                    @onclick="()=>UpdatePiece()">

                    </button>
                </div>
            </TemplateColumn>
            <TemplateColumn Title="Delete">
                <div>
                    <button type="button" class="btn btn-warning"
                    @onclick="()=>DeletePiece(context)">

                    </button>
                </div>
            </TemplateColumn>
        </QuickGrid>
    </div>
    <div>
        @if(isAdd)
        {
            <div>
                <AddPiece></AddPiece>
            </div>
        }
        else if (isUpdate)
        {
            <div>
                <UpdatePiece></UpdatePiece>
            </div>
        }
        else if (isDelete)
        {
           <div class="m-4 p-4 text-center">
                <div>
                    <p class="display-3">details</p>
                </div>
                <div class="m-4 p-4">
                    <h5 class="details"></h5>
                    <p><strong>:</strong> </p>
                    <p><strong>:</strong> </p>
                    <p><strong>:</strong> </p>
                </div>
           </div>
        }
        else
        {
            
        }
    </div>
</div>

@code {
    public IEnumerable<PieceDto> PieceComplexe { get; set; }
    public PieceDto SelectedItem { get; set; }
    public bool isAdd { get; set; } = false;
    public bool isUpdate { get; set; } = false;
    public bool isDelete { get; set; } = false;
    protected override async Task OnInitializedAsync()
    {
        PieceComplexe = await ServPiece.Get();

    }
    public void AddPiece()
    {
        isAdd = true;
        isDelete = false;
        isUpdate = false;
    }
    public void UpdatePiece()
    {
        isUpdate = true;
        isDelete = false;
        isAdd = false;
    }
    public void DeletePiece(PieceDto item)
    {
        SelectedItem = item;
        isAdd = false;
        isDelete = true;
        isUpdate = false;
    }
    public void cleanDetails()
    {
      SelectedItem = null;
    } 
}
