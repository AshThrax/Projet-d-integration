@using Microsoft.AspNetCore.Components.QuickGrid;
@using Blazor.UI.data.modelViews;
@using Blazor.UI.data.services;
@inject IRepresentationService Servrep;
@inject ICommandService SerCom;

<h3>ReservationCommande</h3>

<p>representation</p>
@if(GetRePrensatation != null)
{
    ///en cours de reflexion
    <div>
        <select @bind="selectItemId" @oninput="selectRepresentation">
            <option value="value">text</option>
            @foreach (var item in GetRePrensatation)
            {
                <option value="@item.Id">@item.Seance.ToString()</option>
            }
        </select>
    </div>
}
else
{
   <Blazor.UI.Client.Shared.Load loadParam=""></Blazor.UI.Client.Shared.Load>   
}
@code 
{

    public IEnumerable<RepresentationDto>? GetRePrensatation { get; set; }
    public RepresentationDto? SelectedRepresentation { get; set; }
    public int selectItemId{ get; set; }
    public IEnumerable<RepresentationDto>? CommandRepredentation { get; set; }

    protected override async Task OnInitializedAsync()
    {

        GetRePrensatation = await Servrep.Get();

    }
    public void selectRepresentation(ChangeEventArgs args)
    {
            if (int.TryParse(args.Value?.ToString(), out int selectedId))
            {
                selectItemId = selectedId;

            }
       
    }
}
