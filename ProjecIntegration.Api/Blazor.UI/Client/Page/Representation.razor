@page "/representation/{Id:int}"
@using Blazor.UI.Data.ServiceResult
@using Blazor.UI.Data.modelViews.Theater
@attribute [Authorize(Roles ="Admin")]
@attribute [StreamRendering]
@using Blazor.UI.Data.services.TheatherService
@using Microsoft.AspNetCore.Components.QuickGrid
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager;
@inject  IRepresentationService servRep;
@inject  IPieceService servPiece;
@inject  ISalleService servsalle;


<div class="flex-fill m-4 p-4">
    <div class="jumbotron bg-light m-2 p-2 rounded">
        <div class="m-2 p-2  m-2 p-2 border rounded-4">
            <h3 class="dispaly-1">Representation Summary</h3>

        </div>
    </div>
    <div class="row">
            @if (myPiece != null)
            {
            <div class="border rounded bg-light col-md-5">
                    <div class="col">
                        <img class="img-thumbnail" src="https://localhost:44337/Resources/@myPiece.Image"/>
                    </div>
                    <div class="col ">
                        <h4>Representation Details</h4>
                        <p><strong>Title: </strong> @myPiece.Titre</p>
                        <p><strong>Duration: </strong> @myPiece.Duree</p>
                        <p class="lead"><strong>Description: </strong> @myPiece.Description</p>
                    </div>
                </div>
            }  
        
        <div class="col-md-7">
   
                <div class="m-2 p-2">
                     <h3 class="dispaly-1">Representations: @myPiece?.Titre </h3>
                </div>
                <div class="m-2 p-2 bg-light rounded">
                <Blazor.UI.Client.manager.Representation.Component.GetAllRepresentationComponent Id="@Id" SelectedRepresentation="OnSelectedrepresnetationHandler"></Blazor.UI.Client.manager.Representation.Component.GetAllRepresentationComponent>
                </div>
        </div>
    </div>
    @if (selectedRepresentation != null)
    {
        <div class="row">
            <div class="bg-light rounded w-25">
            <div class=" text-md-start">
                <Blazor.UI.Client.manager.Representation.Component.GetSeanceComponent selectedRepresentation="@selectedRepresentation">

                </Blazor.UI.Client.manager.Representation.Component.GetSeanceComponent>
                <div class="p-2 m-2 ">
                    <p class="lead">Desirer vous reserver cette seance la </p>
                    <button type="button" class="btn btn-warning" @onclick="() => MakeCommand(selectedRepresentation.Id)">Commander</button>
                </div>

            </div>
        </div>
        </div>
    }
    else
    {

    }
</div>
@code {
    [Parameter]
    public int Id { get;  set;}
    private PieceDto? myPiece { get; set; } = new();
    private Pagination<RepresentationDto>? Myrepresnetation;
    private RepresentationDto? selectedRepresentation { get; set; }
    private SalleDeTheatreDto? Piecesalle { get; set; }
    private int? SalleId { get; set; }
    private int? PieceId { get; set; }
    private int? RepresentationId { get; set;}
    public int pageIndex = 1;
    // Populate yourData with actual data, for example, in the OnInitializedAsync method

    protected override async Task OnInitializedAsync()
    {
        // Initialize yourData with actual data
        Myrepresnetation = await servRep.GetPiece(Id,pageIndex); // Replace RepresentationService with your actual service class
        SalleId = selectedRepresentation?.SalledeTheatreId;
        PieceId = Id;

        if (SalleId.HasValue)
        {
            Piecesalle = await servsalle.GetById(SalleId.Value);

        }
        await ShowPieceDetails(Id);
    }

    private async Task ShowPieceDetails(int id)
    {
        myPiece = await servPiece.GetById(Id);

    }
    private void seanceDetails(RepresentationDto select )
    {
        selectedRepresentation = select;
    }
    public void MakeCommand(int id)
    {
        NavigationManager.NavigateTo($"/makecommand/{PieceId}/{SalleId}/{RepresentationId}");
    }
    public async Task NextPage()
    {
        if (Myrepresnetation.HasNextPage)
        {
            pageIndex++;
            Myrepresnetation = await servRep.GetPiece(Id, pageIndex);
        }
    }
    public async Task PreviousPage()
    {
        if (Myrepresnetation.HasPreviousPage)
        {
            pageIndex++;
            Myrepresnetation = await servRep.GetPiece(Id, pageIndex);
        }
    }
    private void OnSelectedrepresnetationHandler(RepresentationDto dto)
    {
        selectedRepresentation = dto;
        RepresentationId = dto.Id;
        SalleId = dto.SalledeTheatreId;
        PieceId = dto.PieceId;
    }
}
