@page "/pieceinfo/{Id:int}"
@using Blazor.UI.Data.ServiceResult
@using Blazor.UI.Data.ModelViews.Theater
@using Blazor.UI.Data.services.Publication
@using Blazor.UI.Data.services.TheatherService
@using Blazor.UI.data.services
@using Blazor.UI.Data.ModelViews.Publication
@using Microsoft.AspNetCore.Components.QuickGrid
@inject IPieceService Servp;
@inject IRepresentationService PieceRep;
@inject IPublicationService pubService;
@inject Microsoft.AspNetCore.Components.NavigationManager manager;

<div class="flex-fill m-4 p-4">
    <h3>Information</h3>
    @if (selectPieces != null)
    {
        <div class="container">
                        <div class="">
                            <div class="m-3 float-end btn-group">
                                <a type="button" class="btn btn-warning shadow-sm" @onclick="GetRepresentation">Voir les Séance:</a>
                                <a type="button" class="btn btn-warning shadow-sm" @onclick="getbackreservation">Reservation</a>
                                <a type="button" class="btn btn-warning shadow-sm" @onclick="() => GetToPublication(Id)">Publication</a>
                            </div>
                        </div>
            <div class="row">
                <div class="card col">

                        <div class="">
                               <h2><strong>Titre :</strong> @selectPieces.Titre</h2>
                        </div>
                        <div class="col-md-5">
                                
                                <img class="img-fluid card-img" src="https://localhost:7170/Resources/@selectPieces.Image" />
                        </div>
                        <div class="col-md-7">
                                <div class=" m-2 p-2">
                                    <h3 class="">Description</h3>
                                    <p class="lead">@selectPieces.Auteur</p>
                                    <p class="lead">@selectPieces.Description</p>
                                    <p class="">@selectPieces.Duree: minutes</p>
                                </div>
                        </div>
                </div>
                <div class="col">
                    @if (getSeance)
                    {
                            <Blazor.UI.Client.manager.Representation.Component.GetAllRepresentationComponent Id="@Id">
                            </Blazor.UI.Client.manager.Representation.Component.GetAllRepresentationComponent>
                    }
                    else
                    {
                
                    }
                </div>
            </div>
        </div>

    }
    else
    {
        <Blazor.UI.Client.Shared.Load></Blazor.UI.Client.Shared.Load>
    }
</div>

@code 
{
    [Parameter]
    public int Id { get; set; }
    public PieceDto? selectPieces { get; set; }
    public Pagination<RepresentationDto>? Myrepresnetation { get; set; }
    public Pagination<PublicationDto>? PiecePublication { get; set; }
    public bool getSeance = false;
    public int pageIndex = 1;
    public int pageIndexPub = 1;
    protected override async Task OnInitializedAsync()
    {
        selectPieces = await Servp.GetById(Id);
        PiecePublication = await pubService.GetAllPublicationByPieceId(1,Id);
        await Task.Delay(100);
    }
    public async Task GetRepresentation()
    {
        getSeance = true;
        Myrepresnetation = (await PieceRep.GetPiece(Id,pageIndex));
    }
    public void getbackreservation()
    {
        manager.NavigateTo($"/representation/{Id}");
    }
    public void GetPost(string annId)
    {
        manager.NavigateTo($"/publication/{annId}");
    }
    public void GetToPublication(int Id)
    {
        manager.NavigateTo($"/publicationbypiece/{Id}");
    }
    public async Task NextPage()
    {
        if (Myrepresnetation.HasNextPage)
        {
            pageIndex++;
            Myrepresnetation = await PieceRep.GetPiece(Id, pageIndex);
        }
    }
    public async Task PreviousPage()
    {
        if (Myrepresnetation.HasPreviousPage)
        {
            pageIndex--;
            Myrepresnetation = await PieceRep.GetPiece(Id, pageIndex);
        }
    }
  
}
