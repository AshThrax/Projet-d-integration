@inject IPieceService ServPiece;
@inject IComplexeService SerComp;
@using Blazor.UI.data.modelViews
@using Blazor.UI.data.services
<div class="card">
    <div class="card-header">
        <h3 class="display-4">Edit SalleDeTheatre</h3>

    </div>
    <div class="card-body">

        @if (salleDeTheatre != null)
        {
            <form>
                <div class="col-form-label">
                    <div>
                        <label class="form-label" for="name">Name:</label>
                        <input class="form-control" id="name" @bind="salleDeTheatre.Name" />
                    </div>
                    <div>
                        <label class="form-label" for="placeMax">Place Max:</label>
                        <input class="form-control" id="placeMax" @bind="salleDeTheatre.PlaceMax" type="number" />
                    </div>
                  
                    <div>
                        <label class="form-label" for="complexeId">Complexe ID:</label>
                        <select class="form-control" @bind="selectedComplexeId" @oninput="OnselcteChange">
                            <option>choissisez le complexe </option>
                            @foreach (var item in SelctedComplexe)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        </select>
                    </div>
           

                    <button type="button" class="btn btn-success" @onclick="UpdateSalleDeTheatre">Update SalleDeTheatre</button>
                </div>
            </form>
        }
        else
        {
            <p>No SalleDeTheatre provided</p>
        }
    </div>
</div>

@code {
    [Parameter]
    public SalleDeTheatreDto? salleDeTheatre { get; set; } = new SalleDeTheatreDto();

    public IEnumerable<ComplexeDto> SelctedComplexe { get; set; }
    public int selectedComplexeId { get; set; }
    protected override async Task OnInitializedAsync()
    {
        SelctedComplexe = await SerComp.Get();
    }
    private void UpdateSalleDeTheatre()
    {
        UpdateSalleDeTheatreDto update = new UpdateSalleDeTheatreDto
        {
                Id = salleDeTheatre.Id,
                Name = salleDeTheatre.Name,
                ComplexeId=salleDeTheatre.ComplexeId,
             
                PlaceMax = salleDeTheatre.PlaceMax,
                AddedTime = salleDeTheatre.AddedTime,
            
        }; 
    }
    public void OnselcteChange(ChangeEventArgs args)
    {

        if (int.TryParse(args.Value?.ToString(), out int selectedId))
        {
            selectedComplexeId = selectedId;
        }
    }
}
