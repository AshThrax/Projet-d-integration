@using Blazor.UI.Data.ModelViews.Publication
@using global::Data.ServiceResult

<div class="align-items-start me-lg-2">
    @if (GetUser != null)
    {
        <div class="m-2 p-2">
            @if (GetUser?.Picture != null)
            {
                <img class="d-block ui-w-30 rounded-circle" width="200" src="@GetUser.Picture" />
            }
            else
            {
                <img class="d-block ui-w-30 rounded-circleg" src="images/images.png" />
            }
            @if (!string.IsNullOrEmpty(GetUser.GivenName))
            {
                <p class="ms-4 card-text text-muted small text-truncate"><strong>Name :</strong>@GetUser?.GivenName</p>

            }
            else
            {
                <p class="ms-4 card-text text-muted small text-truncate"><strong>Name :</strong>@GetUser?.UserName</p>

            }
        </div>
    }
    else
    {
       <Blazor.UI.Client.Shared.Load></Blazor.UI.Client.Shared.Load>    
    }
   
</div>
@code {
    [Parameter]
    public string? UserId { get; set; } 
    ServiceResponse<UserDto> serviceResponse { get; set; }
    public UserDto? GetUser { get; set; }
    HttpClient httpClient = new HttpClient();
    protected override async Task OnInitializedAsync()
    {
        serviceResponse = await httpClient.GetFromJsonAsync<ServiceResponse<UserDto>>($"https://localhost:7170/api/v1/User/{UserId}");
        GetUser = serviceResponse.Data;

    }
}
